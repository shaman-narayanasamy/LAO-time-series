rule binning_separate_bins:
    input:
        expand("{{ts_sample}}/Binning/contigs2clusters.{pk}.{nn}.tsv",pk=config["binning"]["pk"],nn=config["binning"]["nn"]),
        "%s/{ts_sample}/Assembly/mgmt.assembly.merged.fa" % TS_DIR,
        "%s/{ts_sample}/Binning/ORFS-contig_links.bed" % TS_DIR,
        "%s/{ts_sample}/Analysis/annotation/prokka.faa" % TS_DIR,
        "%s/{ts_sample}/Analysis/annotation/annotation.filt.gff" % TS_DIR
    output:
        "{ts_sample}/Binning/separate_bins.done"
    shell:
        """
        for cluster in $(tail -n+2 {input[0]} | cut -f2 | sort | uniq)
        do
            # Create directory for the cluster
            mkdir -p {wildcards.ts_sample}/Binning/clusterFiles/${{cluster}}
            
            # Define headerfiles
            headerfile="{wildcards.ts_sample}/Binning/clusterFiles/${{cluster}}/cluster.${{cluster}}.contigids"
            protids="{wildcards.ts_sample}/Binning/clusterFiles/${{cluster}}/cluster.${{cluster}}.protids"

            echo "Obtaining contigs for cluster ${{cluster}}"
            awk -v c=${{cluster}} '{{ if($2==c) {{print $1}}  }}' {input[0]} > ${{headerfile}}
            pullseq -i {input[1]} -n ${{headerfile}}  > {wildcards.ts_sample}/Binning/clusterFiles/${{cluster}}/cluster.${{cluster}}.fa

            echo "Obtaining amino acid sequences for cluster ${{cluster}}"
            awk 'FNR==NR{{a[$1]=$1;next}}{{if(a[$1]) print $4}}' ${{headerfile}} {input[2]} > ${{protids}}
            pullseq -i {input[3]} -n ${{protids}}  > {wildcards.ts_sample}/Binning/clusterFiles/${{cluster}}/cluster.${{cluster}}.faa

            echo "Obtaining functional annotations (gff format) for cluster/bin ${{cluster}}"
            grep -wFf ${{headerfile}} {input[4]} > {wildcards.ts_sample}/Binning/clusterFiles/${{cluster}}/cluster.${{cluster}}.gff
        done
        echo "Complete separating bins"
        touch {output}
        """
